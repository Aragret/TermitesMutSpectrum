fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
plot_hist(workers[, 2:13], 'workers')
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
plot_hist(withoutWorkers[, 2:13], 'without workers')
summary(workers$Taxonomy)
table(withoutWorkers$Taxonomy)
####################################################################################
### Compare Ts/Tv ratio
# I want 2 density plots for each group
mut$TsTv = (mut$C_T + mut$A_G + mut$T_C + mut$G_A) / (mut$G_T + mut$A_T + mut$G_C +
mut$A_C + mut$C_A + mut$C_G +
mut$T_A + mut$T_G)
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
filter_workers = rbind(workers, withoutWorkers)
summary(filter_workers$TsTv)
summary(mut$Taxonomy)
cockroaches = c('Ectobiidae1', 'Tryonicidae', 'Blaberidae', 'Corydiidae', 'Ectobiidae2',
'Lamproblattidae', 'Anaplectidae', 'Blattidae', 'Cryptocercidae', 'Ectobiidae3',
'Nocticolidae')
mut = mut[!is.na(mut$Taxonomy),]
for(i in 1:nrow(mut)){
if(mut$Taxonomy[i] %in% cockroaches){
mut$Cockroaches[i] = 1
}
if(!(mut$Taxonomy[i] %in% cockroaches))
{mut$Cockroaches[i] = 0}
}
mut$Cockroaches = as.factor(mut$Cockroaches)
summary(mut$Cockroaches)
pdf('../results/cockroaches11_19/TsTvCockroachesVsTermites.pdf')
ggplot(mut, aes(TsTv, fill = mut$Cockroaches, stat(count))) +
geom_density(alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
geom_density(alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
geom_histogram(alpha = 0.3)
summary(mut$sumOfSubs)
dev.off()
library(gdata)
library(ggpubr)
mut = read.xls('../results/cockroaches11_19/table.xlsx')
mut$Soldier = as.factor(mut$Soldier)
summary(mut$Worker)
summary(mut$Soldier)
summary(mut$Taxonomy)
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
a = as.data.frame(as.numeric(apply(workers[, 2:13], 2, sum)))
data = cbind(names(mut[, 2:13]), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = 'with workers',
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
plot_hist = function(x, name){
# x is dataframe with 12 column (subs types), name is a title of graph
a = as.data.frame(as.numeric(apply(x, 2, sum)))
data = cbind(names(x), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = name,
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
plot_hist(workers[, 2:13], 'workers')
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
plot_hist(withoutWorkers[, 2:13], 'without workers')
summary(workers$Taxonomy)
table(withoutWorkers$Taxonomy)
mut$TsTv = (mut$C_T + mut$A_G + mut$T_C + mut$G_A) / (mut$G_T + mut$A_T + mut$G_C +
mut$A_C + mut$C_A + mut$C_G +
mut$T_A + mut$T_G)
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
filter_workers = rbind(workers, withoutWorkers)
summary(filter_workers$TsTv)
ggplot(filter_workers, aes(TsTv)) +
geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.3)
ggplot(filter_workers, aes(TsTv)) +
geom_density(aes(fill = filter_workers$Worker), alpha = 0.3)
ggplot(filter_workers, aes(TsTv)) +
geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.3)
ggplot(filter_workers, aes(TsTv)) +
geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.2)
ggplot(filter_workers, aes(TsTv)) +
geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4)
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
# ggplot(filter_workers, aes(TsTv)) +
#   geom_density(aes(fill = filter_workers$Worker), alpha = 0.3)
# summary(mut$Soldier)
filter_soldiers = mut[!is.na(mut$Soldier),]
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4) +
scale_fill_manual(values=c("#69b3a2", "#404080"))
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
summary(filter_workers[filter_workers$Worker == 0,]$TsTv)
hist(filter_workers[filter_workers$Worker == 0,]$TsTv)
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
# summary(mut$Soldier)
filter_soldiers = mut[!is.na(mut$Soldier),]
ggplot(filter_soldiers, aes(TsTv, fill = filter_soldiers$Soldier)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
summary(mut$Worker)
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
pdf('../results/cockroaches11_19/TsTsWorkersSoldiers.pdf')
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
ggplot(filter_soldiers, aes(TsTv, fill = filter_soldiers$Soldier)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
dev.off()
summary(mut$Taxonomy)
cockroaches = c('Ectobiidae1', 'Tryonicidae', 'Blaberidae', 'Corydiidae', 'Ectobiidae2',
'Lamproblattidae', 'Anaplectidae', 'Blattidae', 'Cryptocercidae', 'Ectobiidae3',
'Nocticolidae')
mut = mut[!is.na(mut$Taxonomy),]
for(i in 1:nrow(mut)){
if(mut$Taxonomy[i] %in% cockroaches){
mut$Cockroaches[i] = 1
}
if(!(mut$Taxonomy[i] %in% cockroaches))
{mut$Cockroaches[i] = 0}
}
mut$Cockroaches = as.factor(mut$Cockroaches)
summary(mut$Cockroaches)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
pdf('../results/cockroaches11_19/TsTvCockroachesVsTermites.pdf')
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
dev.off()
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
ggplot(filter_soldiers, aes(TsTv, fill = filter_soldiers$Soldier)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
pdf('../results/cockroaches11_19/TsTsWorkersSoldiers.pdf')
ggplot(filter_workers, aes(TsTv, fill = filter_workers$Worker)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
# ggplot(filter_workers, aes(TsTv)) +
#   geom_density(aes(fill = filter_workers$Worker), alpha = 0.3)
# summary(mut$Soldier)
filter_soldiers = mut[!is.na(mut$Soldier),]
ggplot(filter_soldiers, aes(TsTv, fill = filter_soldiers$Soldier)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#404080", "#69b3a2"))
dev.off()
pdf('../results/cockroaches11_19/TsTvCockroachesVsTermites.pdf')
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
summary(mut$sumOfSubs)
dev.off()
plot_hist(mut[mut$Cockroaches == 1, 2:13], 'cockroaches')
plot_hist(mut[mut$Cockroaches == 0, 2:13], 'termites')
pdf('../results/cockroaches11_19/TsTvCockroachesVsTermites.pdf')
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
summary(mut$sumOfSubs)
plot_hist(mut[mut$Cockroaches == 1, 2:13], 'cockroaches')
plot_hist(mut[mut$Cockroaches == 0, 2:13], 'termites')
dev.off()
summary(mut$Taxonomy)
unique(mut$Taxonomy)
library(ape)
library(stringr)
library(seqinr)
tree = read.tree('results/phylogeny/iqtree_mito.treefile')
tree = read.tree('../results/cockroaches11_19/phylogeny/iqtree_mito.treefile')
anc = read.table('../results/cockroaches11_19/phylogeny/iqtree_mito.state', header=TRUE)
agg = aggregate(State ~ Node, anc, paste, collapse = "")
table(anc$Node)
tree$edge
numberOfSpecies = length(tree$tip.label)
a = as.data.frame(tree$edge)
a = cbind(a, tree$edge.length)
externalBranches = a[a$V2 <= numberOfSpecies,]
externalBranches = cbind(externalBranches, tree$tip.label)
names(externalBranches) = c('Node', 'Tip', 'BranchLength', 'Species')
tree = root(tree, 'Locusta_migratoria_1')
labelsTree = as.data.frame(as.character(tree$node.label))
names(labelsTree) = 'NodeLabels'
a = do.call(rbind, str_split(labelsTree$NodeLabels, '/'))
labelsTree = cbind(labelsTree, a)
names(labelsTree) = c('NodeLabels', 'Node', 'Bootstrap', 'Bootstrap2')
ancSeqs = merge(agg, labelsTree, by='Node')
View(ancSeqs)
ancSeqs$Node = as.numeric(sub('Node', '', ancSeqs$Node))
ancSeqs$Node = ancSeqs$Node + numberOfSpecies
data = merge(ancSeqs, externalBranches, by='Node')
aligns = read.fasta('results/align_cat.fasta', as.string = TRUE)
aligns = read.fasta('../results/cockroaches11_19/aligns/align_cat.fasta', as.string = TRUE)
a = data.frame(Species=names(aligns), Seqs=unlist(getSequence(aligns, as.string=T)))
data$Species = as.character(data$Species)
a$Species = as.character(a$Species)
# a$Species = sapply(a$Species, function(x) sub('?', '', x))
a$Species = str_replace_all(a$Species, fixed('?'), '')
a$Species = str_replace_all(a$Species, fixed(';'), '')
a$Species = str_replace_all(a$Species, fixed('__'), '_')
data$Species = str_replace_all(data$Species, fixed('__'), '_')
anc_desSeqs = merge(data, a, by='Species')
setdiff(data$Species, anc_desSeqs$Species)
View(ancSeqs)
View(anc_desSeqs)
length(anc_desSeqs[1,]$State)
length(anc_desSeqs[1,]$Seqs)
?list.files
filelist <- list.files(path = '../results/cockroaches11_19/aligns/', pattern=".*\\.align\\.fna")
?gsub
aligns[1]
aligns[[1]]
unlist(getSequence(aligns, as.string=T))[1]
length(unlist(getSequence(aligns, as.string=T))[1])
length(getSequence(aligns, as.string=T)[1])
getSequence(aligns, as.string=T)[1]
length(s2c(unlist(getSequence(aligns, as.string=T))[1]))
length(s2c(unlist(getSequence(aligns, as.string=T))[2]))
length(s2c(unlist(getSequence(aligns, as.string=T))[3]))
length(s2c(unlist(getSequence(aligns, as.string=T))))
length(s2c(unlist(getSequence(aligns, as.string=T))[10]))
i = filelist[1]
# i = filelist[1]
pathName = paste('../results/cockroaches11_19/aligns/', i, sep = '')
align = read.fasta(pathName, as.string = TRUE)
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[100]))
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
geneLengths = as.data.frame()
geneLengths = data.frame()
geneLengths = rbind(geneLengths, geneLength)
View(geneLengths)
# i = filelist[1]
geneName = gsub('.fasta.align.fna', '', i)
geneLengths = rbind(c(geneName, geneLengths), geneLength)
View(geneLengths)
one_line  c()
one_line = c()
one_line = c()
for(i in filelist){
# i = filelist[1]
geneName = gsub('.fasta.align.fna', '', i)
pathName = paste('../results/cockroaches11_19/aligns/', i, sep = '')
align = read.fasta(pathName, as.string = TRUE)
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
one_line = rbind(one_line, c(geneName, geneLengths))
}
one_line = c()
for(i in filelist){
# i = filelist[1]
geneName = gsub('.fasta.align.fna', '', i)
pathName = paste('../results/cockroaches11_19/aligns/', i, sep = '')
align = read.fasta(pathName, as.string = TRUE)
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
one_line = rbind(one_line, c(geneName, geneLengths))
}
filelist <- list.files(path = '../results/cockroaches11_19/aligns/', pattern=".*\\.align\\.fna")
one_line = c()
for(i in filelist){
# i = filelist[1]
geneName = gsub('.fasta.align.fna', '', i)
pathName = paste('../results/cockroaches11_19/aligns/', i, sep = '')
align = read.fasta(pathName, as.string = TRUE)
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
one_line = rbind(one_line, c(geneName, geneLengths))
}
View(one_line)
c(geneName, geneLengths)
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
# i = filelist[1]
geneName = gsub('.fasta.align.fna', '', i)
c(geneName, geneLengths)
i = filelist[1]
# i = filelist[1]
geneName = gsub('.fasta.align.fna', '', i)
pathName = paste('../results/cockroaches11_19/aligns/', i, sep = '')
align = read.fasta(pathName, as.string = TRUE)
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
one_line = rbind(one_line, c(geneName, geneLengths))
View(one_line)
c(geneName, geneLengths)
c(geneName, geneLengths)
one_line = c()
one_line = rbind(one_line, c(geneName, geneLengths))
View(one_line)
geneName
geneLengths
as.integer(geneLengths)
str(geneLength)
geneLength
one_line = c()
for(i in filelist){
# i = filelist[1]
geneName = gsub('.fasta.align.fna', '', i)
pathName = paste('../results/cockroaches11_19/aligns/', i, sep = '')
align = read.fasta(pathName, as.string = TRUE)
geneLength = length(s2c(unlist(getSequence(align, as.string=T))[1]))
one_line = rbind(one_line, c(geneName, as.integer(geneLength)))
}
View(one_line)
View(one_line)
sum(one_line[,2])
View(one_line)
genes = as.data.frame(one_line)
View(genes)
names(genes) = c('Gene', 'Length')
sum(genes$Length)
sum(as.integer(genes$Length))
as.integer(genes$Length)
View(genes)
sum(as.numeric(genes$Length))
as.numeric(genes$Length)
genes$Length
str(one_line)
sum(as.numeric(levels(genes$Length))[genes$Length])
View(anc_desSeqs)
table(anc$Node)
genes$Length = as.numeric(levels(genes$Length))[genes$Length]
genes$Gene = as.character(genes$Gene)
genes$Gene
genes_to_convert = c('ATP6', 'ATP8', 'COI', 'COII', 'COIII', 'CyB', 'ND2', 'ND3')
first_stop = sum(genes[genes$Gene %in% c('ATP6', 'ATP8', 'COI', 'COII', 'COIII', 'CyB'), 'Length'])
second_stop_from = first_stop + genes[genes$Gene == 'ND1', 'Length']
second_stop_to = second_stop_from + genes[genes$Gene %in% c('ND2', 'ND3'), 'Length']
second_stop_to = second_stop_from + sum(genes[genes$Gene %in% c('ND2', 'ND3'), 'Length'])
codonTable = as.data.frame(NULL)
y = 1
# y = 1
mdns <- as.character(anc_desSeqs$State[y])
msns <- toupper(as.character(anc_desSeqs$Seqs[y]))
s1 <- s2c(mdns)       #conversion of a string into a vector of chars
s2 <-  s2c(msns)
cdns1 <- splitseq(s1, 0, 3) #split a sequence into sub-sequences (codons)
cdns2 <- splitseq(s2, 0, 3)
codonposition <-c(1:length(cdns1))
final <- c()
x = 1
cdns1[x] != cdns2[x]
taa1 <- translate(s2c(cdns1[x]), frame = 0, sens = "F", numcode = 5, NAstring = "X", ambiguous = FALSE)
taa2 <- translate(s2c(cdns2[x]), frame = 0, sens = "F", numcode = 5, NAstring = "X", ambiguous = FALSE)
species <- anc_desSeqs$Species[y]
print(c(species, x))
first_stop / 3
x < first_stop / 3
x > second_stop_from/3
x < second_stop_to/3
x > second_stop_from/3 & x < second_stop_to/3
x < first_stop / 3 | (x > second_stop_from/3 & x < second_stop_to/3)
cdns1[x] = comp(cdns1[x])
s2c(cdns1[x])
comp(s2c(cdns1[x]))
paste(comp(s2c(cdns1[x]), forceToLower = FALSE), '')
comp(s2c(cdns1[x]), forceToLower = FALSE)
paste(comp(s2c(cdns1[x]), forceToLower = FALSE), '')
?paste
paste(comp(s2c(cdns1[x]), forceToLower = FALSE), collapse = '')
library(gdata)
library(ggpubr)
mut = read.xls('../results/cockroaches11_19/table.xlsx')
mut$Soldier = as.factor(mut$Soldier)
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
a = as.data.frame(as.numeric(apply(workers[, 2:13], 2, sum)))
data = cbind(names(mut[, 2:13]), a)
names(data) = c('Subs', 'Number')
plot_hist = function(x, name){
# x is dataframe with 12 column (subs types), name is a title of graph
a = as.data.frame(as.numeric(apply(x, 2, sum)))
data = cbind(names(x), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = name,
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
plot_hist(workers[, 2:13], 'workers')
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
plot_hist(withoutWorkers[, 2:13], 'without workers')
summary(workers$Taxonomy)
table(withoutWorkers$Taxonomy)
mut$TsTv = (mut$C_T + mut$A_G + mut$T_C + mut$G_A) / (mut$G_T + mut$A_T + mut$G_C +
mut$A_C + mut$C_A + mut$C_G +
mut$T_A + mut$T_G)
mut$Ts = mut$C_T + mut$A_G + mut$T_C + mut$G_A
mut$Tv = mut$G_T + mut$A_T + mut$G_C +  mut$A_C + mut$C_A + mut$C_G + mut$T_A + mut$T_G
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
filter_workers = rbind(workers, withoutWorkers)
summary(filter_workers$TsTv)
cockroaches = c('Ectobiidae1', 'Tryonicidae', 'Blaberidae', 'Corydiidae', 'Ectobiidae2',
'Lamproblattidae', 'Anaplectidae', 'Blattidae', 'Cryptocercidae', 'Ectobiidae3',
'Nocticolidae')
mut = mut[!is.na(mut$Taxonomy),]
for(i in 1:nrow(mut)){
if(mut$Taxonomy[i] %in% cockroaches){
mut$Cockroaches[i] = 1
}
if(!(mut$Taxonomy[i] %in% cockroaches))
{mut$Cockroaches[i] = 0}
}
mut$Cockroaches = as.factor(mut$Cockroaches)
summary(mut$Cockroaches)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
# geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.4) +
geom_histogram( color="#e9ecef", alpha=0.4, position = 'dodge') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
View(mut)
write.table(mut, '../results/cockroaches11_19/MutSpecCockroachesTsTv.txt', sep='\t', quote = FALSE, row.names = FALSE)
rm(list=ls(all=TRUE))
mut = read.table('../results/cockroaches11_19/MutSpecCockroachesTsTv.txt', sep='\t', header=TRUE)
View(mut)
plot(mut$sumOfSubs, mut$BranchLength)
plot(mut$sumOfSubs, mut$TsTv)
cor.test(mut$sumOfSubs, mut$TsTv, method = 'spearman')
plot(mut$sumOfSubs, mut$Ts)
plot(mut$sumOfSubs, mut$Tv)
plot(mut$Ts, mut$Tv)
cor.test(mut$Ts, mut$Tv, method = 'spearman')
a = lm(Ts ~ Tv, mut)
a
summary(a)
res = a$residuals
cor.test(mut$sumOfSubs, res)
cor.test(mut$BranchLength, res, method = 'spearman')
plot(mut$BranchLength, res)
plot(mut$BranchLength, scale(res))
cor.test(mut$Ts, mut$Tv, method = 'spearman')
plot(mut$TsTv, mut$BranchLength)
cor.test(mut$sumOfSubs, mut$TsTv, method = 'spearman')
cor.test(mut$TsTv, mut$BranchLength)
plot(mut$Ts, mut$Tv)
cor.test(mut$Ts, mut$Tv, method = 'spearman')
plot(mut$sumOfSubs, mut$Ts)
plot(mut$sumOfSubs, mut$Tv)
plot(mut$Ts, mut$Tv)
plot(mut$sumOfSubs, mut$BranchLength)
pdf('../results/cockroaches11_19/TsTvNormalization.R.pdf')
plot(mut$sumOfSubs, mut$Ts)
plot(mut$sumOfSubs, mut$Tv)
plot(mut$Ts, mut$Tv)
dev.off()
plot(mut$sumOfSubs, mut$TsTv)
cor.test(mut$sumOfSubs, mut$TsTv, method = 'spearman')
plot(mut$sumOfSubs, mut$TsTv)
summary(glm(Cockroaches ~ TsTv + sumOfSubs, data=mut))
?glm
summary(glm(Cockroaches ~ TsTv + sumOfSubs + TsTv*sumOfSubs, data=mut))
summary(glm(Cockroaches ~ TsTv + sumOfSubs, data=mut))
plot(mut$sumOfSubs, mut$TsTv)
plot(mut$sumOfSubs, mut$Ts)
plot(mut$sumOfSubs, mut$Tv)
plot(mut$Ts, mut$Tv)
plot(mut$sumOfSubs, mut$TsTv)
summary(glm(Cockroaches ~ TsTv + sumOfSubs, data=mut))
summary(glm(Cockroaches ~ TsTv*sumOfSubs, data=mut))
summary(glm(scale(Cockroaches) ~ TsTv*sumOfSubs, data=mut))
summary(glm(Cockroaches ~ TsTv + sumOfSubs, data=mut))
pdf('../results/cockroaches11_19/TsTvNormalization.R.pdf')
plot(mut$sumOfSubs, mut$Ts)
plot(mut$sumOfSubs, mut$Tv)
plot(mut$Ts, mut$Tv)
plot(mut$sumOfSubs, mut$TsTv)
dev.off()
