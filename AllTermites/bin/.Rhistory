mutTableBrlen = merge(mutTable, brLen)
View(mutTableBrlen)
a = matrix(0, ncol=12, nrow=nrow(mut))
mutTableBrlen$sumOfSubs = mutTableBrlen[, "C_T"] + mutTableBrlen[, "A_G"] + mutTableBrlen[, "T_C"] + mutTableBrlen[, "G_T"] + mutTableBrlen[, "A_C"] +
mutTableBrlen[, "G_A"] + mutTableBrlen[, "A_T"] + mutTableBrlen[, "G_C"] + mutTableBrlen[, "C_A"] + mutTableBrlen[, "C_G"] + mutTableBrlen[, "T_A"] +
mutTableBrlen[, "T_G"]
View(mut)
View(mutTableBrlen)
for(i in 1:12){
a[, i] = mutTableBrlen[, i+1] / mutTableBrlen$sumOfSubs
}
a = matrix(0, ncol=12, nrow=nrow(mutTableBrlen))
for(i in 1:12){
a[, i] = mutTableBrlen[, i+1] / mutTableBrlen$sumOfSubs
}
View(a)
fractions = as.data.frame(a)
names(fractions) = sub(' ', '', paste(names(mut[, 2:13]), '_fr'))
names(fractions) = sub(' ', '', paste(names(mutTableBrlen[, 2:13]), '_fr'))
View(fractions)
mutFr = cbind(mutTableBrlen, fractions)
View(mutFr)
cor.test(mutFr$BranchLength, mutFr$sumOfSubs)
plot(mutFr$BranchLength, mutFr$sumOfSubs)
cor.test(mutFr$BranchLength, mutFr$A_G_fr)
cor.test(mutFr$BranchLength, mutFr$C_T_fr)
plot(mutFr$BranchLength, mutFr$C_T_fr)
summary(mutFr$BranchLength)
mutFrBrlen02 = mutFr[mutFr$BranchLength >= 0.02,]
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
summary(mutFrBrlen02$BranchLength)
names(families)
data = merge(mutFrBrlen02, families[, 'Species', 'Taxonomy', 'Worker', 'diet.wood.soil'])
data = merge(mutFrBrlen02, families[, 'Species', 'Taxonomy', 'Worker', 'diet.wood.soil'], by='Species')
data = merge(mutFrBrlen02, families[, c('Species', 'Taxonomy', 'Worker', 'diet.wood.soil')], by='Species')
data = merge(mutFrBrlen02, families[, c('Species', 'Taxonomy', 'Worker', 'diet.wood.soil')], by='Species', all.x = TRUE)
View(data)
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
cor.test(mutFrBrlen02$sumOfSubs, mutFrBrlen02$C_T_fr)
View(mutFrBrlen02)
names(mutFrBrlen02)[16]
for(i in 16:27){
names(mutFrBrlen02)[i]
print(cor.test(mutFrBrlen02[, i], mutFrBrlen02$BranchLength))
}
for(i in 16:27){
print(names(mutFrBrlen02)[i])
print(cor.test(mutFrBrlen02[, i], mutFrBrlen02$BranchLength))
}
View(data)
write.table(data, '../results/cockroaches11_19/4foldSubsBrLen02Fractions.Cockroaches.txt', sep='\t', quote = FALSE, row.names = FALSE)
library(gdata)
mut = read.table('../results/cockroaches11_19/4foldSubs.Cockroaches.txt', header = TRUE, sep='\t')
families = read.xls('../results/4foldSubsBrLen02Fractions.xlsx')
mutBrLen02 = mut[mut$BranchLength >= 0.02,]
mut$Subs = as.character(mut$Subs)
speciesNumber = length(unique(mut$Species))
mutTable = setNames(data.frame(matrix(0, ncol = 12, nrow = speciesNumber)), unique(mut$Subs))
Species = unique(mut$Species)
mutTable = cbind(Species, mutTable)
for(i in 1:nrow(mut)){
row = mut[i, ]
mutTable[mutTable$Species == row$Species, row$Subs] = mutTable[mutTable$Species == row$Species, row$Subs] + 1
}
table(mut[mut$Species == "AUS49_Tumulitermes_sp._1",]$Subs)
mutTable[mutTable$Species == 'AUS49_Tumulitermes_sp._1',]
brLen = aggregate(mut$BranchLength, by=list(mut$Species), unique)
names(brLen) = c('Species', 'BranchLength')
mutTableBrlen = merge(mutTable, brLen)
a = matrix(0, ncol=12, nrow=nrow(mutTableBrlen))
mutTableBrlen$sumOfSubs = mutTableBrlen[, "C_T"] + mutTableBrlen[, "A_G"] + mutTableBrlen[, "T_C"] + mutTableBrlen[, "G_T"] + mutTableBrlen[, "A_C"] +
mutTableBrlen[, "G_A"] + mutTableBrlen[, "A_T"] + mutTableBrlen[, "G_C"] + mutTableBrlen[, "C_A"] + mutTableBrlen[, "C_G"] + mutTableBrlen[, "T_A"] +
mutTableBrlen[, "T_G"]
for(i in 1:12){
a[, i] = mutTableBrlen[, i+1] / mutTableBrlen$sumOfSubs
}
fractions = as.data.frame(a)
names(fractions) = sub(' ', '', paste(names(mutTableBrlen[, 2:13]), '_fr'))
mutFr = cbind(mutTableBrlen, fractions)
cor.test(mutFr$BranchLength, mutFr$sumOfSubs)
plot(mutFr$BranchLength, mutFr$sumOfSubs)
plot(mutFr$BranchLength, mutFr$sumOfSubs, method = 'spearman')
cor.test(mutFr$BranchLength, mutFr$sumOfSubs, method = 'spearman')
cor.test(mutFr$BranchLength, mutFr$C_T_fr)
plot(mutFr$BranchLength, mutFr$C_T_fr)
cor.test(mutFr$BranchLength, mutFr$C_T_fr, method = 'spearman')
summary(mutFr$BranchLength)
mutFrBrlen02 = mutFr[mutFr$BranchLength >= 0.02,]
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr, method = 'spearman')
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
View(mutFrBrlen02)
brLenLess1 = mutFrBrlen02[mutFrBrlen02$BranchLength <= 0.1,]
brLenMore1 = mutFrBrlen02[mutFrBrlen02$BranchLength > 0.1,]
plot(brLenLess1$C_T_fr, brLenLess1$BranchLength)
cor.test(brLenLess1$C_T_fr, brLenLess1$BranchLength)
cor.test(brLenLess1$C_T_fr, brLenLess1$BranchLength, method = 'spearman')
plot(brLenMore1$C_T_fr, brLenMore1$BranchLength)
cor.test(brLenMore1$C_T_fr, brLenMore1$BranchLength, method = 'spearman')
print(cor.test(brLenLess1[, i], brLenLess1$BranchLength, method = 'spearman'))
for(i in 16:27){
print(names(brLenLess1)[i])
print(cor.test(brLenLess1[, i], brLenLess1$BranchLength, method = 'spearman'))
}
for(i in 16:27){
print(names(brLenMore1)[i])
print(cor.test(brLenMore1[, i], brLenMore1$BranchLength, method = 'spearman'))
}
pdf('../results/cockroaches11_19/CorrBrLenFractions.pdf')
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
summary(mutFrBrlen02$BranchLength)
plot(brLenLess1$C_T_fr, brLenLess1$BranchLength, main = 'brlen less than 0.1')
plot(brLenMore1$C_T_fr, brLenMore1$BranchLength, main = 'brlen more than 0.1')
dev.off()
pdf('../results/cockroaches11_19/CorrBrLenFractions.pdf')
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
summary(mutFrBrlen02$BranchLength)
for(i in 16:27){
print(names(mutFrBrlen02)[i])
print(cor.test(mutFrBrlen02[, i], mutFrBrlen02$BranchLength))
}
################
# check different branch length
brLenLess1 = mutFrBrlen02[mutFrBrlen02$BranchLength <= 0.1,]
brLenMore1 = mutFrBrlen02[mutFrBrlen02$BranchLength > 0.1,]
plot(brLenLess1$C_T_fr, brLenLess1$BranchLength, main = 'brlen less than 0.1')
plot(brLenLess1$A_G_fr, brLenLess1$BranchLength, main = 'brlen less than 0.1')
cor.test(brLenLess1$C_T_fr, brLenLess1$BranchLength, method = 'spearman')
plot(brLenMore1$C_T_fr, brLenMore1$BranchLength, main = 'brlen more than 0.1')
plot(brLenMore1$A_G_fr, brLenMore1$BranchLength, main = 'brlen more than 0.1')
cor.test(brLenMore1$C_T_fr, brLenMore1$BranchLength, method = 'spearman')
for(i in 16:27){
print(names(brLenLess1)[i])
print(cor.test(brLenLess1[, i], brLenLess1$BranchLength, method = 'spearman'))
}
for(i in 16:27){
print(names(brLenMore1)[i])
print(cor.test(brLenMore1[, i], brLenMore1$BranchLength, method = 'spearman'))
}
dev.off()
pdf('../results/cockroaches11_19/CorrBrLenFractions.pdf')
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$sumOfSubs)
cor.test(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$C_T_fr)
plot(mutFrBrlen02$BranchLength, mutFrBrlen02$A_G_fr)
summary(mutFrBrlen02$BranchLength)
for(i in 16:27){
print(names(mutFrBrlen02)[i])
print(cor.test(mutFrBrlen02[, i], mutFrBrlen02$BranchLength))
}
################
# check different branch length
brLenLess1 = mutFrBrlen02[mutFrBrlen02$BranchLength <= 0.1,]
brLenMore1 = mutFrBrlen02[mutFrBrlen02$BranchLength > 0.1,]
plot(brLenLess1$C_T_fr, brLenLess1$BranchLength, main = 'brlen less than 0.1')
plot(brLenLess1$A_G_fr, brLenLess1$BranchLength, main = 'brlen less than 0.1')
cor.test(brLenLess1$C_T_fr, brLenLess1$BranchLength, method = 'spearman')
plot(brLenMore1$C_T_fr, brLenMore1$BranchLength, main = 'brlen more than 0.1')
plot(brLenMore1$A_G_fr, brLenMore1$BranchLength, main = 'brlen more than 0.1')
cor.test(brLenMore1$C_T_fr, brLenMore1$BranchLength, method = 'spearman')
for(i in 16:27){
print(names(brLenLess1)[i])
print(cor.test(brLenLess1[, i], brLenLess1$BranchLength, method = 'spearman'))
}
for(i in 16:27){
print(names(brLenMore1)[i])
print(cor.test(brLenMore1[, i], brLenMore1$BranchLength, method = 'spearman'))
}
dev.off()
library(ape)
library(stringr)
library(seqinr)
tree = read.tree('../results/cockroaches11_19/phylogeny/iqtree_mito.treefile')
anc = read.table('../results/cockroaches11_19/phylogeny/iqtree_mito.state', header=TRUE)
agg = aggregate(State ~ Node, anc, paste, collapse = "")
table(anc$Node)
tree$edge
numberOfSpecies = length(tree$tip.label)
a = as.data.frame(tree$edge)
a = cbind(a, tree$edge.length)
externalBranches = a[a$V2 <= numberOfSpecies,]
externalBranches = cbind(externalBranches, tree$tip.label)
names(externalBranches) = c('Node', 'Tip', 'BranchLength', 'Species')
is.rooted(tree)
a = read.table('../4foldSubsBrLen02Fractions.Cockroaches.txt', sep='\t', header=TRUE)
View(a)
rm(list=ls(all=TRUE))
library(gdata)
mut = read.table('../results/cockroaches11_19/4foldSubs.Cockroaches.txt', header = TRUE, sep='\t')
families = read.xls('../results/4foldSubsBrLen02Fractions.xlsx')
mutBrLen02 = mut[mut$BranchLength >= 0.02,]
mut$Subs = as.character(mut$Subs)
speciesNumber = length(unique(mut$Species))
mutTable = setNames(data.frame(matrix(0, ncol = 12, nrow = speciesNumber)), unique(mut$Subs))
Species = unique(mut$Species)
mutTable = cbind(Species, mutTable)
for(i in 1:nrow(mut)){
row = mut[i, ]
mutTable[mutTable$Species == row$Species, row$Subs] = mutTable[mutTable$Species == row$Species, row$Subs] + 1
}
table(mut[mut$Species == "AUS49_Tumulitermes_sp._1",]$Subs)
mutTable[mutTable$Species == 'AUS49_Tumulitermes_sp._1',]
brLen = aggregate(mut$BranchLength, by=list(mut$Species), unique)
names(brLen) = c('Species', 'BranchLength')
mutTableBrlen = merge(mutTable, brLen)
a = matrix(0, ncol=12, nrow=nrow(mutTableBrlen))
mutTableBrlen$sumOfSubs = mutTableBrlen[, "C_T"] + mutTableBrlen[, "A_G"] + mutTableBrlen[, "T_C"] + mutTableBrlen[, "G_T"] + mutTableBrlen[, "A_C"] +
mutTableBrlen[, "G_A"] + mutTableBrlen[, "A_T"] + mutTableBrlen[, "G_C"] + mutTableBrlen[, "C_A"] + mutTableBrlen[, "C_G"] + mutTableBrlen[, "T_A"] +
mutTableBrlen[, "T_G"]
for(i in 1:12){
a[, i] = mutTableBrlen[, i+1] / mutTableBrlen$sumOfSubs
}
fractions = as.data.frame(a)
names(fractions) = sub(' ', '', paste(names(mutTableBrlen[, 2:13]), '_fr'))
mutFr = cbind(mutTableBrlen, fractions)
cor.test(mutFr$BranchLength, mutFr$sumOfSubs)
plot(mutFr$BranchLength, mutFr$sumOfSubs)
cor.test(mutFr$BranchLength, mutFr$C_T_fr)
plot(mutFr$BranchLength, mutFr$C_T_fr)
summary(mutFr$BranchLength)
mutFrBrlen02 = mutFr[mutFr$BranchLength >= 0.02,]
library(ggplot2)
View(mutFrBrlen02)
plot(mutFrBrlen02[, 15:27])
View(mutFrBrlen02)
plot(mutFrBrlen02[, c(2:13, 15)])
data = read.table('../results/cockroaches11_19/4foldSubsBrLen02Fractions.Cockroaches.txt', header=TRUE, sep='\t')
View(data)
library(gdata)
termites = read.table('../results/4foldSubsBrLen02Fractions.txt', sep='\t', header=TRUE)
View(termites)
termites = read.xls('../results/4foldSubsBrLen02Fractions.xlsx')
View(termites)
soldier = termites[, c('Species', 'Soldier')]
a = merge(data, soldier)
a = merge(data, soldier, all.x = TRUE)
View(a)
summary(a$Worker)
summary(a$Soldier)
summary(a$Taxonomy)
summary(data$Worker)
summary(data$Taxonomy)
na_w = a[which(is.na(a$Worker)),]
na_s = a[which(is.na(a$Soldier)),]
setdiff(na_s$Species, na_w$Worker)
View(na_s)
View(na_w)
setdiff(na_s$Species, na_w$Species)
View(na_s)
a$Soldier = as.factor(a$Soldier)
View(data)
View(a)
View(soldier)
View(na_s)
b = read.table('~/Downloads/4foldSubsBrLen02Fractions.Cockroaches.txt', header=TRUE, sep='\t')
View(b)
summary(b$Taxonomy)
View(b)
summary(b$Worker)
View(b)
b = merge(b, soldier, all.x = TRUE)
na_w = b[which(is.na(b$Worker)),]
na_s = b[which(is.na(b$Soldier)),]
setdiff(na_s$Species, na_w$Species)
na_t = b[which(is.na(b$Taxonomy)),]
View(na_t)
View(b)
write.table(b, '../results/cockroaches11_19/4foldSubsBrLen02Fractions.Cockroaches.txt',
sep='\t', quote = FALSE, row.names = FALSE)
library(gdata)
mut = read.xls('../results/cockroaches11_19/table.xlsx')
View(mut)
mut$Soldier = as.factor(mut$Soldier)
summary(mut$Worker)
summary(mut$Soldier)
summary(mut$Taxonomy)
View(mut)
workers = mut[mut$Worker == 1,]
View(workers)
View(mut)
workers = workers[!is.na(workers$Worker),]
View(workers)
a = lapply(workers[, 2:13], 2, sum)
a = apply(workers[, 2:13], 2, sum)
sum(workers$C_T)
a = as.data.frame(apply(workers[, 2:13], 2, sum))
View(a)
hist(a)
a = as.data.frame(as.numeric(apply(workers[, 2:13], 2, sum)))
hist(a)
hist(a$`as.numeric(apply(workers[, 2:13], 2, sum))`)
View(a)
a = as.numeric(apply(workers[, 2:13], 2, sum))
rbind(workers[, 2:13], a)
mut = rbind(workers[, 2:13], a)
View(mut)
mut = read.xls('../results/cockroaches11_19/table.xlsx')
mut$Soldier = as.factor(mut$Soldier)
summary(mut$Worker)
summary(mut$Soldier)
summary(mut$Taxonomy)
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
a = data.frame(as.numeric(apply(workers[, 2:13], 2, sum)))
View(a)
a = as.data.frame(as.numeric(apply(workers[, 2:13], 2, sum)))
View(a)
View(workers)
data = cbind(names(mut[, 2:13]), a)
View(data)
names(data) = c('Subs', 'Number')
ggbarplot(Agg, 'Subs', 'Number', xlab="Substitution types", title = '4-fold degenerate sites',
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
library(ggpubr)
ggbarplot(Agg, 'Subs', 'Number', xlab="Substitution types", title = '4-fold degenerate sites',
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = '4-fold degenerate sites',
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = 'with workers',
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
plot_hist = function(x){
# x is dataframe with 12 column (subs types)
a = as.data.frame(as.numeric(apply(x, 2, sum)))
data = cbind(names(x), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = 'with workers',
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
plot_hist(workers[, 2:13])
plot_hist = function(x){
# x is dataframe with 12 column (subs types)
a = as.data.frame(as.numeric(apply(x, 2, sum)))
data = cbind(names(x), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types",
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
plot_hist = function(x, name){
# x is dataframe with 12 column (subs types)
a = as.data.frame(as.numeric(apply(x, 2, sum)))
data = cbind(names(x), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = name,
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
plot_hist(workers[, 2:13], 'workers')
plot_hist = function(x, name){
# x is dataframe with 12 column (subs types), name is a title of graph
a = as.data.frame(as.numeric(apply(x, 2, sum)))
data = cbind(names(x), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = name,
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
withoutWorkers = mut[mut$Worker == 0,]
View(withoutWorkers)
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
plot_hist(withoutWorkers[, 2:13], 'without workers')
summary(workers$Taxonomy)
summary(withoutWorkers$Taxonomy)
table(withoutWorkers$Taxonomy)
View(a)
library(gdata)
library(ggpubr)
mut = read.xls('../results/cockroaches11_19/table.xlsx')
mut$Soldier = as.factor(mut$Soldier)
summary(mut$Worker)
summary(mut$Soldier)
summary(mut$Taxonomy)
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
a = as.data.frame(as.numeric(apply(workers[, 2:13], 2, sum)))
data = cbind(names(mut[, 2:13]), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = 'with workers',
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
plot_hist = function(x, name){
# x is dataframe with 12 column (subs types), name is a title of graph
a = as.data.frame(as.numeric(apply(x, 2, sum)))
data = cbind(names(x), a)
names(data) = c('Subs', 'Number')
ggbarplot(data, 'Subs', 'Number', xlab="Substitution types", title = name,
fill = 'Subs', color = 'Subs', palette = c("#bdbdbd", "#7fcdbb", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#feb24c", "#f03b20", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#2c7fb8", "#bdbdbd"), combine = TRUE)
}
plot_hist(workers[, 2:13], 'workers')
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
plot_hist(withoutWorkers[, 2:13], 'without workers')
summary(workers$Taxonomy)
table(withoutWorkers$Taxonomy)
View(mut)
mut$TsTv = (mut$C_T + mut$A_G + mut$T_C + mut$G_A) / (mut$G_T + mut$A_T + mut$G_C +
mut$A_C + mut$C_A + mut$C_G +
mut$T_A + mut$T_G)
ggplot(mut, aes(TsTv)) +
geom_density(col = Worker)
ggplot(mut, aes(TsTv)) +
geom_density(col = mut$Worker)
filter_workers = rbind(workers, withoutWorkers)
workers = mut[mut$Worker == 1,]
workers = workers[!is.na(workers$Worker),]
withoutWorkers = mut[(mut$Worker == 0) & !is.na(mut$Worker),]
filter_workers = rbind(workers, withoutWorkers)
ggplot(filter_workers, aes(TsTv)) +
geom_density(col = filter_workers$Worker)
ggplot(filter_workers, aes(TsTv)) +
geom_density(fill = filter_workers$Worker)
View(filter_workers)
summary(filter_workers$TsTv)
ggplot(filter_workers, aes(TsTv)) +
geom_density(aes(fill = filter_workers$Worker))
ggplot(filter_workers, aes(TsTv)) +
geom_density(aes(fill = filter_workers$Worker), alpha = 0.1)
ggplot(filter_workers, aes(TsTv)) +
geom_density(aes(fill = filter_workers$Worker), alpha = 0.3)
summary(mut$Soldier)
filter_soldiers = mut[!is.na(mut$)]
filter_soldiers = mut[!is.na(mut$Soldier),]
ggplot(filter_soldiers, aes(TsTv)) +
geom_density(aes(fill = filter_soldiers$Soldier), alpha = 0.3)
ggplot(filter_soldiers, aes(TsTv)) +
geom_area(aes(fill = filter_soldiers$Soldier), alpha = 0.3)
ggplot(filter_soldiers, aes(TsTv)) +
geom_density(aes(fill = filter_soldiers$Soldier), alpha = 0.3)
ggplot(filter_soldiers, aes(TsTv)) +
geom_histogram(aes(fill = filter_soldiers$Soldier), alpha = 0.3)
ggplot(filter_soldiers, aes(TsTv)) +
geom_density(aes(fill = filter_soldiers$Soldier), alpha = 0.3)
ggplot(filter_workers, aes(TsTv)) +
geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.3)
pdf('../results/cockroaches11_19/TsTsWorkersSoldiers.pdf')
ggplot(filter_workers, aes(TsTv)) +
geom_histogram(aes(fill = filter_workers$Worker), alpha = 0.3)
ggplot(filter_workers, aes(TsTv)) +
geom_density(aes(fill = filter_workers$Worker), alpha = 0.3)
ggplot(filter_soldiers, aes(TsTv)) +
geom_histogram(aes(fill = filter_soldiers$Soldier), alpha = 0.3)
ggplot(filter_soldiers, aes(TsTv)) +
geom_density(aes(fill = filter_soldiers$Soldier), alpha = 0.3)
dev.off()
summary(mut$Taxonomy)
cockroaches = c('Ectobiidae1', 'Tryonicidae', 'Blaberidae', 'Corydiidae', 'Ectobiidae2',
'Lamproblattidae', 'Anaplectidae', 'Blattidae', 'Cryptocercidae', 'Ectobiidae3',
'Nocticolidae')
mut = mut[!is.na(mut$Taxonomy),]
else(mut$Cockroaches[i] = 0)
else{mut$Cockroaches[i] = 0}
for(i in nrow(mut)){
if(mut$Taxonomy[i] %in% cockroaches){
mut$Cockroaches[i] = 1
}
else{mut$Cockroaches[i] = 0}
}
View(mut)
for(i in nrow(mut)){
if(mut$Taxonomy[i] %in% cockroaches){
mut$Cockroaches[i] = 1
}
if(!(mut$Taxonomy[i] %in% cockroaches))
{mut$Cockroaches[i] = 0}
}
View(mut)
for(i in 1:nrow(mut)){
if(mut$Taxonomy[i] %in% cockroaches){
mut$Cockroaches[i] = 1
}
if(!(mut$Taxonomy[i] %in% cockroaches))
{mut$Cockroaches[i] = 0}
}
View(mut)
ggplot(mut, aes(TsTv)) +
geom_density(aes(fill = mut$Cockroaches), alpha = 0.3)
mut$Cockroaches = as.factor(mut$Cockroaches)
summary(mut$Cockroaches)
ggplot(mut, aes(TsTv)) +
geom_density(aes(fill = mut$Cockroaches), alpha = 0.3)
ggplot(mut, aes(TsTv)) +
geom_histogram(aes(fill = mut$Cockroaches), alpha = 0.3)
summary(mut$sumOfSubs)
ggplot(mut, aes(TsTv, stat='count')) +
geom_density(aes(fill = mut$Cockroaches), alpha = 0.3)
ggplot(mut, aes(TsTv)) +
geom_histogram(aes(fill = mut$Cockroaches), alpha = 0.3)
ggplot(mut, aes(TsTv, stat(count))) +
geom_density(aes(fill = mut$Cockroaches), alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
geom_histogram(alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
geom_density(alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches, stat(count))) +
geom_density(alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
geom_histogram(alpha = 0.3)
pdf('../results/cockroaches11_19/TsTvCockroaceshVsTermites.pdf')
ggplot(mut, aes(TsTv, fill = mut$Cockroaches, stat(count))) +
geom_density(alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches, stat(count))) +
geom_density(alpha = 0.3)
ggplot(mut, aes(TsTv, fill = mut$Cockroaches)) +
geom_histogram(alpha = 0.3)
dev.off()
